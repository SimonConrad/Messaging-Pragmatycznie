// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TicketFlow.Services.SLA.Core.Data;

#nullable disable

namespace TicketFlow.Services.SLA.Core.Data.Migrations.SLA
{
    [DbContext(typeof(SLADbContext))]
    [Migration("20241217213005_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("sla")
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TicketFlow.Services.SLA.Core.Data.Models.DeadlineReminders", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AgentIdToRemind")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("DeadlineDateUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool?>("DeadlineMet")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("FinalReminderDateUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("FinalReminderSent")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("FirstReminderDateUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("FirstReminderSent")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LastDeadlineBreachedAlertSentDateUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset?>("SecondReminderDateUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("SecondReminderSent")
                        .HasColumnType("boolean");

                    b.Property<string>("ServiceSourceId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte>("ServiceType")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("DeadlineReminders", "sla");
                });

            modelBuilder.Entity("TicketFlow.Services.SLA.Core.Data.Models.SignedSLA", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("ClientTier")
                        .HasColumnType("integer");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Domain")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("_agreedResponseDeadlines")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.HasKey("Id");

                    b.ToTable("SignedSLAs", "sla");
                });
#pragma warning restore 612, 618
        }
    }
}
